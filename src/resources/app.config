# 下载文件命名格式
## avId - bv号 e.g. BV1BJ411E7uM
## numAvId - 老的数字av号 e.g. av1234567 中的1234567
## pAv - av 的第几个视频  e.g. p1/p2
## pAv[0-9] - 数字表示对齐长度，例如：
### pAv3  - 预期序号长度为3，不足补零；长度大于3不做改变，例如 p001/p002/p1234
## pDisplay - 合集的第几个视频 e.g. pn1/pn2
## pDisplay[0-9] - 数字表示对齐长度，例子参考pAv
## qn - 清晰度值  e.g. 32/64/80
## avTitle - av标题 
## clipTitle - 视频小标题
## UpName - 阿婆主的名字
## UpId - 阿婆主的id
###   以下可能不存在，仅在收藏夹/UP主视频搜索时有效
### listName - 集合名称  e.g. 某收藏夹的名称
### listOwnerName - 集合的拥有者 e.g. 某某某 （假设搜索的是某人的收藏夹）
### favTime - 收藏时间，需要与格式化日期配合，仅在收藏夹有效，建议与条件相配合
### cTime - 发布时间，需要与格式化日期配合，仅在收藏夹、普通视频有效，建议与条件相配合
#### 格式化日期(不会可以百度 java 格式化时间 SimpleDateFormat)
#bilibili.name.date.cTime.pattern = yyyy-MM-dd HH-mm-ss
bilibili.name.date.favTime.pattern = yyMMdd
bilibili.name.date.cTime.pattern = yyMMdd

####    pDisplay 和 pAv 可能不一致, 比如有的ss是分布在不同的av的第一个视频, 有的则是分布在同一av的不同p
# (:条件 格式字符串) 当条件成立时，文件名将增加括号内的格式字符串(注意条件和格式字符串中间的空格)
#bilibili.name.format = (:listName listName-)avTitle-pDisplay-pAv-clipTitle-qn

bilibili.name.format = (:listName listName-)avTitle-pDisplay-clipTitle-qn

# 下载完成后是否马上重命名 
# 若为false, 那么会追加到重命名文件， 可以人工运行rename.bat 重命名
bilibili.name.doAfterComplete = true
# 下载完成后是否尝试给相关作品点赞👍(已经点赞的不会取消)
bilibili.download.thumbUp = false
# 全部任务完成后是否播放提示音
bilibili.download.playSound = false
#######################################################################################################
# 下载异常后尝试次数， 0 则异常后不再尝试
bilibili.download.maxFailRetry = 3

# 优先下载格式
# 0: MP4 1:FLV
bilibili.format = 0

# 字幕优先下载语种
# zh-CN: 中文（中国） zh-HK: 中文（中国香港）
# en-US: 英语（美国） ja:日语
# 更多详见release/wiki/langs.txt
bilibili.cc.lang = zh-CN
#######################################################################################################
# ffmpeg环境配置(当同级目录下ffmpeg无法生效时，需要人为指定ffmpeg位置)
bilibili.ffmpegPath = ffmpeg
bilibili.flv.ffmpeg = false
#######################################################################################################
# 批量下载设置
## 0 下载每个tab页的第一个视频； 1 下载每个Tab页的全部视频
bilibili.menu.download.plan = 1

## 批量下载优先下载清晰度 8K/HDR/4K/1080P60/1080P+/1080P/720P60/720P/480P/320P
bilibili.menu.download.qn = 1080P
bilibili.tab.download.qn = 1080P
#######################################################################################################
# 分页查询时，每页最大显示个数
bilibili.pageSize = 5

# 分页查询时，结果展示方式
## promptAll 每个av弹出一个Tab页
## listAll 所有选项在一个Tab页面里呈现
bilibili.pageDisplay = listAll
#######################################################################################################
#下载文件保存路径， 可以是相对路径，也可以是绝对路径
bilibili.savePath = download/
#bilibili.savePath = D:\Workspace\bilibili\

#######################################################################################################
#最大的同时下载任务数
bilibili.download.poolSize = 3


###  多线程下载配置
###### 请注意，修改多线程配置后，若不清空缓存的.part[0-9]*文件，可能导致原来未完成的下载任务失败!!!
# 下载文件时，分{count}部分同时下载
## 0 或 1 为不开启多线程下载
#bilibili.download.multiThread.count = 3
bilibili.download.multiThread.count = 0
# 当文件大小小于{minFileSize} MB时，不开启多线程下载
## 0 为不进行文件大小判断
bilibili.download.multiThread.minFileSize = 0
# 当下载链接匹配该正则时，不进行多线程下载
bilibili.download.multiThread.singlePattern = github|ffmpeg|\.m4s|\.jpg|\.png|\.webp|\.xml

#######################################################################################################
#UI主题
# default swing默认
# system 跟随系统
bilibili.theme = default

# button 样式
## default 默认
## design 设计
bilibili.button.style = design

#######################################################################################################
#临时文件严格模式开启与否
#开启后，如果已经存在下载好的视频(无论视频损坏与否)，该视频对应的临时文件将会被删除
#关闭后，当下载完成后，如果视频大小达标，该视频对应的临时文件将会被删除。某些异常可能会导致临时文件未被删除而一直存在。
# on / off
bilibili.restrictTempMode = on

#######################################################################################################
#是否使用仓库功能
# 开启后，每次下载前都会先从仓库查询记录。 若存在，则不开始任务
bilibili.repo = on

# 仓库功能关闭时，是否仍保存下载成功的记录(即只保存成功的下载记录而不作其它操作)
bilibili.repo.save = on

# 同一视频的不同清晰度算不算同一记录
##		on  : 同一视频两种清晰度算不同记录
##		off : 同一视频两种清晰度算相同记录
bilibili.repo.definitionStrictMode = off

#######################################################################################################
# 下载已完成的视频时，是否弹出提示 true / false
bilibili.alert.isAlertIfDownloded = true

# 批量下载时，最大提示框弹出数
bilibili.alert.maxAlertPrompt = 5
#######################################################################################################
# 同时支持HTTP + HTTPS 代理
#proxyHost = 127.0.0.1
#proxyPort = 1080

# SOCKS 代理，支持 HTTP 和 HTTPS 请求
# 注意：如果设置了 SOCKS 代理就不要设 HTTP/HTTPS 代理
#socksProxyHost = 127.0.0.1
#socksProxyPort = 1080
#######################################################################################################
# 跳过HTTPS证书检查
## https://github.com/nICEnnnnnnnLee/BilibiliDown/issues/77
## 不建议修改此选项
## 当你修改此选项时，请确认清楚地知道你在干什么
bilibili.https.allowInsecure = false

# 只允许程序单例运行，防止多开
bilibili.lockCheck = false
#######################################################################################################
## 登录设置

# 登录方式
# qr 扫描QR二维码
# pwd 使用用户名密码登录
bilibili.user.login = qr

# 用户名密码登录的实现方式  auto/manual
## auto 用户无感自动登录(不会有用户名密码登录框弹出)  
## 该模式下，将采用接口https://bili.dev:2233/captcha进行验证码自动识别
## 与该接口交互仅包含验证码图片的Base64编码，不涉及其它敏感数据  
### 
## 该模式下，需要配置bilibili.user.userName/bilibili.user.password，否则视为无效配置
######
## manual 将有用户名密码登录框弹出，需要人工操作
bilibili.user.login.pwd = manual

# 用户名密码登录框弹出时，是否使用接口智能提取验证码  
# 为true时，将采用接口https://bili.dev:2233/captcha进行验证码自动识别
# 与该接口交互仅包含验证码图片的Base64编码，不涉及其它敏感数据  
bilibili.user.login.pwd.autoCaptcha = false

# 默认登录用户名 (建议配置在文件config/user.config中)
#bilibili.user.userName = xxx
# 默认登录密码 (建议配置在文件config/user.config中)
#bilibili.user.password = xxxx
# 每次从user.config读取配置后，将该文件删除
bilibili.user.delete = true